<?php

namespace App\Http\Requests\Auth;

use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Validation\Rule;
use Illuminate\Validation\Rules\Password;

class RegisterRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     */
    public function rules(): array
    {
        return [
            'email' => ['required', 'string', 'email', 'max:255', Rule::unique(table: 'users', column: 'email')],
            'name' => ['required', 'string', 'max:255'],
            'password' => $this->passwordRules(),
        ];
    }

    /**
     * Get the validation rules used to validate passwords.
     *
     * In production, passwords must be at least 8 characters long, contain at
     * least one uppercase and one lowercase letter, one number, and one symbol.
     * They must also not be compromised (i.e. not found in the compromised
     * password list).
     *
     * In development, passwords must be at least 3 characters long and contain
     * at least one uppercase and one lowercase letter.
     */
    protected function passwordRules(): array
    {
        if (app()->isProduction()) {
            return [
                'required',
                'string',
                'confirmed',
                Password::min(size: 8)
                    ->letters()
                    ->mixedCase()
                    ->numbers()
                    ->symbols()
                    ->uncompromised(),
            ];
        }

        return [
            'required',
            'string',
            'confirmed',
        ];
    }
}
